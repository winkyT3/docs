##加载资源##
#####技术点#####
1. 加载prefab进内存，通过UnityEngine.Object.Instantiate接口创建对象
1. 游戏发布时会将prefab和其他资源一起打包进assetbundle。想要加载prefab，需要先加载所在的assetbundle。
    AssetBundleRequest request = bundle.LoadAssetAsync(prefab_name);
    GameObject prefab = request.asset as GameObject;
1. assetbundle具体具有依赖性，比如assetbundle A的一个prefab 引用了另一个asssetbundle B的资源，则加载prefab时需要先加载A, B
    AssetBundleManifest manifest = bundle.LoadAsset<AssetBundleManifest>("AssetBundleManifest");    // 这个只需加载一次
    string[] dependence = manifest.GetAllDependencies(load_item.asset_id.bundleName);                // 获得bundle之间的依赖
1. assetbundle需要执行脚本生成，所谓的打包，效率慢，在开发过程将很烦琐。
1. 用另外接口省去打包的麻烦（仅限开发过程中）
    string[] paths AssetDatabase.GetAssetPathsFromAssetBundleAndAssetName(bundleName, assetName);    // 获取文件路径
    UnityEngine.Object obj = AssetDatabase.LoadAssetAtPath(prefab_name, typeof(GameObject));        // 加载prefab
1. 场景加载
    bundle方式加载 AsyncOperation asyncOperation = SceneManager.LoadSceneAsync(load_item.asset_id.assetName, load_item.load_mode);
    本地读取方式加载 EditorApplication.LoadLevelAsyncInPlayMode(paths[0])
    
#####设计思路#####
1. 多种加载器实现IAssetLoader接口
1. 各种加载器实现队列加载，由LoaderManager管理实现各种资源的加载和加载方式（是用打包bundle加载还是本地读取的文式）
1. 资源缓存管理CacheManager, 比如AssetBundle不重复加载，Prefab不重复加载，缓存里有直接用Object.Instantiate 创建即可
1. 用一个宏定义决定采用哪种加载资源方式，#define SIMULATE_LOAD
1. AssetManager提供资源创建获取的接口

#####实现#####
1. 创建场景
AssetManager.Instance.CreateScene(new AssetId("scene/1", "Scene1"), LoadSceneMode.Single)

1. 加载模型到场景
AssetManager.Instance.CreateGameObject(new AssetId("actors/role/1001001", "1001001"), null);
